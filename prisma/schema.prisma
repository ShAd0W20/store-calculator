// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model AppConfig {
  id        String  @id @default(cuid())
  storeName String
  storeLogo String?
}

model User {
  id            String    @id @default(cuid())
  name          String?
  nick          String?
  email         String    @unique
  emailVerified DateTime?
  image         String?
  role          String?
  accounts      Account[]
  sessions      Session[]

  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  Order     Order[]
  TimeWork  TimeWork[]
}

model Account {
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@id([provider, providerAccountId])
}

model Session {
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model VerificationToken {
  identifier String
  token      String
  expires    DateTime

  @@id([identifier, token])
}

model Client {
  id    String  @id @default(cuid())
  name  String
  phone String?
  image String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Order     Order[]
}

model Product {
  id          String  @id @default(cuid())
  name        String
  description String?
  price       Int
  image       String?

  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
  OrderItem OrderItem[]
}

model OrderItem {
  id        String   @id @default(cuid())
  productId String
  quantity  Int
  price     Int
  orderId   String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  product Product @relation(fields: [productId], references: [id])
  Order   Order?  @relation(fields: [orderId], references: [id])
}

model Order {
  id        String      @id @default(cuid())
  userId    String
  clientId  String
  items     OrderItem[]
  total     Int
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt

  user   User   @relation(fields: [userId], references: [id])
  client Client @relation(fields: [clientId], references: [id])

  @@index([id, userId, clientId])
}

model TimeWork {
  id        String   @id @default(cuid())
  userId    String
  start     DateTime
  end       DateTime?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id])

  @@index([id, userId, start, end])
}
